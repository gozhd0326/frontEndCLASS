* react-router-dom 이 사용하는 컴포넌트
  - BrowserRouter

  - Routes

  - Route

  - Oulet

browser 안에는 history와 location가 있음 => url 주소가 들어 있음

 ** 페이지 변경을 위해 사용하는 것들
 - Link, NavLink : 링크태그(<a>) 대신에 사용(유저가 클릭해야만 페이지 이동), NavLink를 더 많이 사용하는 이유는 css에게 active 할 수 있도록 하기 때문. 대신에 hrf를 쓰는게 아니라 to 를 씀!(ex) StyeldNavLink to="/")

 - useNavigate : (자바 스크립트 함수 안에서 자동으로 페이지 이동할 때 사용, 후크임!)
	ex) navigate( `/search?keyword=${inputValue}`); => /가 붙으면 루트 부터 , /가 없으면 현재 떠 있는 url 뒤에 붙음 url 주소는 /search 임.

 - Navigate : (JSX 안에서 자동으로 페이지 이동할 때 사용, useNavigate를 사용할 수 없을 때 사용
	ex ) { 조건 ? <Navigate to ="/login"/>
		: <Navigate to ="/dashboard"/>
		</> )


*** 페이지 간의 정보 이동은 어떻게??
1) http://localhost:8080/api/user/steve12 => user까지만 url이고 user컴포넌트에게 정보가 필요하기 때문에 이런 방식으로 전달함 ( PathVariable 문법) (UseParams를 사용)
===> useParams를 이용하여 steve12를 읽어온다. (얘는 간단한 대신에 변수를 하나밖에 못씀)

2) http://localhost:8080/api/user/search?userId=steve12 => user라는 파라미터를 사용한다. ( 파라미터문법 ) 
===>useLocation을 이용하여 steve12를 읽어온다. ( 변수(파라미터)를 여러 개 사용가능, 전달해야하는 정보가 여러 개라면 이 방법을 사용해야 함)



react-router-dom => NavLink, Oulet, useNavigate
index = 부모와 주소가 같다.(동일하게 적어도 되지만 의도한 것을 명시하기 위해)
path = 부모 밑에 상대적인 주소가 있다.(index(컴포넌트도 중복사용은 됨)말고는 중복사용이 안됨!! 그래서 path는 모두 달라야 됨)
oulet = 명시적으로 하위 컴포넌트를 어디에 보여줄까를 위해 쓰임, 자식이 있는 라우터에는 꼭 필요하다!! 
(하위 컴포넌트들의 위치임.그래서 제일 마지막에 씀.)(화면에 보여주는 것은 아예 없으나 자식의 위치만 지정)
* => 모든 것, 에러페이지를 표시할 때 쓰임
: 변수 (ex path =" :id"-> 특정한 아이디를 가지고 있는 애들은 이런 식으로 쓰임) = 뒤에 무엇이 올지 알 수 없을 때(명시할 수 없을 때) 쓰임.
( 그래서 wrapper 안에 두 개의 : 이 올 수 없음.(예를들어 무엇이 :id인지 :name인지 알 수 없기 때문에) 다른 route를 만들어야 됨)
(예를 들어 /products:id 인 곳에서 존재하지 않는 id값을 입력하면 없는 url 이기 때문에 에러가 발생되어야 함. ->product 컴포넌트 안에서 navigate를 사용하거나 notfound 에러 페이지를 만듦)


context => 글로벌 저장소 context의 범위를 나타내기 위해서 proivder를 사용. (context는 함수이름 provider는 중괄호 같은 느낌임)
provider는 JSX에서 영역을 나타내기 위한 수단임.