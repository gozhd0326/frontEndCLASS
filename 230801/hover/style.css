* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container {
    display: flex;
    padding: 3rem;
    gap: 1rem;
}

figure {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1 1 0;
    /* flex: 1 1 calc(100%/5);
    width: 100px; */
    height: 600px;
    aspect-ratio: 1/3;
    overflow: hidden;
    border-radius: 200px;
    cursor: pointer;
    transition: all 0.4s ease;
    /*transition: all 200ms ease;도
    all값을 transform이나 특정 속성으로 설정 가능 ease도 ease in, ease out, ease in-out등으로 설정 가능 */
}

img {
    width: 100%;
    max-width: 100%;
    height: 100%;
    object-fit: cover;
    filter: opacity(25%);
    /* filter는 filter: blur(5px);
    filter: brightness(0.4);
    filter: contrast(200%);
    filter: drop-shadow(16px 16px 20px blue);
    filter: grayscale(50%);
    filter: hue-rotate(90deg);
    filter: invert(75%);
    filter: opacity(25%);
    filter: saturate(30%);
    filter: sepia(60%); 등으로 설정할 수 있음.
    */

}

.item.active{
    flex:3 1 0;
}
.item.active img {
    filter: opacity(100%);
}

/* :active는 가상클래스로 효과가 나타나는 것이기 때문에 계속 누르고 있는 상태에서만 적용이 되고 
.active는 클래스 자체를 주었기 때문에 자바스크립트에서 설정해놓은 이벤트로 클릭했을 시 적용
기존의 설정을 before,
active를 애프터 효과라고 생각하면 됨.*/

/* figure:hover {
    flex: 3 1 0;
}

figure:hover img {
    filter: opacity(100%);
} */